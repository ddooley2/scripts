#!/bin/sh

# This script will compile or run another finishing operation on a document. I
# have this script run via vim.
# An second and optional argument called MOD is available to modify certain documents.
#
# tex files: Compiles to pdf, including bibliography if necessary
# md files: Compiles to pdf via pandoc. If MOD is 1(default is 0) it will compile into pdf slides through beamer.
# rmd files: Compiles via R Markdown
# c files: Compiles via whatever compiler is set to cc. Usually gcc.
# py files: runs via python command
# go files: compiles and runs with "go run"
# config.h files: (For suckless utils) recompiles and installs program.
# all others: run `sent` to show a presentation


file=$(readlink -f "$1")
dir=$(dirname "$file")
base="${file%.*}"
shebang=$(sed -n 1p "$file")
MOD=${2:-0}

cd "$dir" || exit

textype() { \
	command="pdflatex"
	( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
	$command --output-directory="$dir" "$base" &&
	grep -i addbibresource "$file" >/dev/null &&
	biber --input-directory "$dir" "$base" &&
	$command --output-directory="$dir" "$base" &&
	$command --output-directory="$dir" "$base"
	}

shebangtest() {
	case "$shebang" in
		\#\!*) "$file" ;;
		*) sent "$file" 2>/dev/null & ;;
	esac
}

case "$file" in
	*\.ms) refer -PS -e "$file" | groff -me -ms -kejpt -T pdf > "$base".pdf ;;
	*\.mom) refer -PS -e "$file" | groff -mom -kejpt -T pdf > "$base".pdf ;;
	*\.rmd) echo "require(rmarkdown); render('$file')" | R -q --vanilla ;;
	*\.tex) textype "$file" ;;
	*\.md)
		if [ "$MOD" -eq "1" ]; then
			pandoc -t beamer "$file"  -o "$base".pdf
		else
			pandoc "$file" --pdf-engine=xelatex -o "$base".pdf
		fi ;;
	*config.h) make && sudo make install ;;
        *\.c) cc "$file" -o "$base" && "$base" ;;
	*\.py) python "$file" ;;
	*\.go) go run "$file" ;;
	*) shebangtest ;;
esac
